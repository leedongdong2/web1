---42) 부서코드가 80번이거나 입사월이 04월인 직원들의 평균 급여는?
SELECT CEIL(avg(NVL(salary,0))) AS 평균급여 FROM EMPLOYEES WHERE DEPARTMENT_ID = 80 OR TO_CHAR(HIRE_DATE,'MM') = '04';


-----------------------GROUP BY----------------------------
--그룹바이절 사용시 유의사항
--1) SELECT절에는 GROUP BY절에 사용한 컬럼명만 사용가능 (별칭사용불가능)
--2) 만약 GROUP BY절에서 사용한 컬럼명이 아닌 경우엔 반드시 집계합수내에서 사용해야함


--43) 부서별 인원수는 몇명?
SELECT COUNT(EMPLOYEE_ID),DEPARTMENT_ID FROM EMPLOYEES GROUP BY DEPARTMENT_ID ;

---44) 입사년도별 인원수는 몇명?
SELECT COUNT(EMPLOYEE_ID) AS 인원수,TO_CHAR(HIRE_DATE,'RRRR') AS 입사년도 FROM EMPLOYEES GROUP BY TO_CHAR(HIRE_DATE,'RRRR');

---45) 부서별 급여합계를 계산하시오!
SELECT DEPARTMENT_ID,SUM(NVL(SALARY,0)) AS 급여합계 FROM EMPLOYEES GROUP BY DEPARTMENT_ID ;

SELECT * FROM DEPARTMENTS WHERE DEPARTMENT_ID =10 OR DEPARTMENT_ID =80;

---46) 직무별 인원수와 평균 급여를 계산하시오
SELECT  JOB_ID AS 직무,COUNT(EMPLOYEE_ID) AS 인원수 ,AVG(NVL(SALARY,0)) AS 평균급여 FROM EMPLOYEES GROUP BY JOB_ID ;

---47) 부서코드가 80번인 직원들 중 직무별 인원수는 ?
SELECT JOB_ID,COUNT(JOB_ID) FROM EMPLOYEES WHERE DEPARTMENT_ID = 80 GROUP BY JOB_ID;

--48) 직무별 인원수 조회
SELECT JOB_ID,COUNT(JOB_ID) FROM EMPLOYEES GROUP BY JOB_ID ;

--49) 직무별 인원수중 인원이 5명 보다 큰 정보를 조회
SELECT JOB_ID,COUNT(JOB_ID) CNT FROM EMPLOYEES GROUP BY JOB_ID HAVING COUNT(JOB_ID)>5;  

---50) 부서별,직무별 인원수 조회 GROUPING SET
SELECT DEPARTMENT_ID,COUNT(EMPLOYEE_ID) FROM EMPLOYEES GROUP BY DEPARTMENT_ID;

SELECT JOB_ID,COUNT(EMPLOYEE_ID) FROM EMPLOYEES GROUP BY JOB_ID;

SELECT DEPARTMENT_ID,JOB_ID,COUNT(EMPLOYEE_ID) FROM EMPLOYEES 
GROUP BY DEPARTMENT_ID,JOB_ID
ORDER BY DEPARTMENT_ID ;

SELECT DEPARTMENT_ID,JOB_ID,COUNT(EMPLOYEE_ID) FROM EMPLOYEES 
GROUP BY GROUPING SETS(DEPARTMENT_ID,JOB_ID)
ORDER BY DEPARTMENT_ID ;


-----------------
---JOIN
------------------

---51) LEX의 부서명은?
SELECT * FROM EMPLOYEES e  WHERE FIRST_NAME ='Lex';
SELECT * FROM DEPARTMENTS d  WHERE DEPARTMENT_ID = 90;

--- oracle join
SELECT DEPARTMENT_NAME FROM EMPLOYEES e,DEPARTMENTS d WHERE e.DEPARTMENT_ID = d.DEPARTMENT_ID AND e.FIRST_NAME ='Lex';

---- ansi join
SELECT DEPARTMENT_NAME FROM EMPLOYEES e JOIN DEPARTMENTS d 
ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
WHERE first_name = 'Lex';

---52) 사번이 112인 직원의 이름,급여,부서코드,부서명을 조회하시오
SELECT FIRST_NAME,SALARY,DEPARTMENT_NAME,e.DEPARTMENT_ID FROM EMPLOYEES e JOIN DEPARTMENTS d 
ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
WHERE EMPLOYEE_ID = 112;

---oracle-----
SELECT FIRST_NAME,SALARY,DEPARTMENT_NAME,e.DEPARTMENT_ID FROM EMPLOYEES e,DEPARTMENTS d 
WHERE e.DEPARTMENT_ID = d.DEPARTMENT_ID AND EMPLOYEE_ID = 112;


--53) 부서명이 IT인 직원들의 이름, 이메일 부서코드를 조회
SELECT FIRST_NAME,EMAIL,e.DEPARTMENT_ID FROM EMPLOYEES e JOIN DEPARTMENTS d 
ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
WHERE DEPARTMENT_NAME = 'IT';

---oracle-----
SELECT FIRST_NAME,EMAIL,e.DEPARTMENT_ID FROM EMPLOYEES e,DEPARTMENTS d 
WHERE e.DEPARTMENT_ID = d.DEPARTMENT_ID 
AND DEPARTMENT_NAME = 'IT';


--54) 부서명이 SALES인 부서의 급여합계를 조회
SELECT DEPARTMENT_NAME 부서명 ,SUM(SALARY) 합계 FROM EMPLOYEES e  JOIN DEPARTMENTS d 
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID 
GROUP BY DEPARTMENT_NAME
HAVING DEPARTMENT_NAME = 'Sales';

---oracle-----
SELECT DEPARTMENT_NAME 부서명 ,SUM(SALARY) 합계 FROM EMPLOYEES e,DEPARTMENTS d 
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID 
GROUP BY DEPARTMENT_NAME
HAVING DEPARTMENT_NAME = 'Sales';


--55) 부서명이 FINANCE인 부서의 매니저 이름은?
SELECT d.DEPARTMENT_NAME,first_name,d.MANAGER_ID FROM EMPLOYEES e JOIN DEPARTMENTS d 
ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
WHERE DEPARTMENT_NAME = 'Finance' AND e.EMPLOYEE_ID = d.MANAGER_ID ;

---oracle-----
SELECT first_name,d.MANAGER_ID FROM EMPLOYEES e, DEPARTMENTS d 
WHERE e.DEPARTMENT_ID = d.DEPARTMENT_ID 
AND DEPARTMENT_NAME = 'Finance' AND e.EMPLOYEE_ID = d.MANAGER_ID ;

SELECT d.department_name 부서명, first_name 이름 FROM EMPLOYEES e JOIN DEPARTMENTS d
ON e.EMPLOYEE_ID = d.MANAGER_ID 
WHERE d.DEPARTMENT_NAME = 'Finance';

------ 연결 조건에 맞게 연결되어  테이블이 형성된다
SELECT * FROM EMPLOYEES e JOIN DEPARTMENTS d
ON e.EMPLOYEE_ID = d.MANAGER_ID 
----- 꼭 기본키 외래키로 연결하지 않아도 이어지는 결과값만 있으면 이을 수 있다. 좀 더 확실하게 명확한 관계로 잇는것이 좋다


--- outer join,eqiv join 차이

---- eqiv조인(연결조건에 맞지않으면 세지 않는다) 부서가 없는 직원은 카운팅되지않는다 조회가되지않는다
SELECT count(*) FROM EMPLOYEES e JOIN DEPARTMENTS d 
ON e.DEPARTMENT_ID = d.DEPARTMENT_ID ;

---outer join(연결조건에 맞지않아도 카운팅되고 출력한다) 단 기준테이블만 출력이되고 나머지 테이블은 값이 없이 조회된다. 
SELECT count(*) FROM EMPLOYEES e LEFT OUTER JOIN DEPARTMENTS d 
ON e.DEPARTMENT_ID  = d.DEPARTMENT_ID; 

---56) departments 테이블을 기준으로 부서코드,부서명,직원이름을 조회.

---56.1) join
SELECT d.DEPARTMENT_ID,d.DEPARTMENT_NAME,e.FIRST_NAME 
FROM DEPARTMENTS d JOIN EMPLOYEES e 
ON D.DEPARTMENT_ID = E.DEPARTMENT_ID ;

----56.2) LEFT OUTER JOIN

SELECT d.DEPARTMENT_ID,d.DEPARTMENT_NAME,e.FIRST_NAME 
FROM DEPARTMENTS d LEFT OUTER JOIN EMPLOYEES e 
ON D.DEPARTMENT_ID = E.DEPARTMENT_ID ;

------------------
--SELF JOIN
------------------
SELECT employee_id,manager_id FROM  EMPLOYEES e ;

---57)sigal 사원의 매니저 이름은?
SELECT manager_id FROM EMPLOYEES e WHERE FIRST_NAME = 'Sigal';
SELECT first_name FROM EMPLOYEES e WHERE EMPLOYEE_ID = 114;

SELECT m.first_name FROM EMPLOYEES e JOIN EMPLOYEES m 
ON e.MANAGER_ID = m.EMPLOYEE_ID
WHERE e.FIRST_NAME = 'Sigal';

--58) 매니져 이름이 John Russell이 관리하는 직원들의 사번, 이름, 급여
SELECT m.employee_id FROM EMPLOYEES m WHERE m.FIRST_NAME = 'John' AND m.LAST_NAME ='Russell';
SELECT e.employee_id,e.first_name,e.salary,e.MANAGER_ID FROM EMPLOYEES e WHERE e.MANAGER_ID  =145;

SELECT *
FROM EMPLOYEES e JOIN EMPLOYEES m 
ON e.MANAGER_ID = m.EMPLOYEE_ID 


SELECT e.employee_id,e.first_name,e.salary,e.manager_id 
FROM EMPLOYEES e JOIN EMPLOYEES m 
ON e.MANAGER_ID = m.EMPLOYEE_ID 
WHERE m.first_name = 'John' AND m.LAST_NAME ='Russell';



SELECT e.EMPLOYEE_ID,e.FIRST_NAME,e.SALARY,e.MANAGER_ID 
FROM EMPLOYEES e JOIN EMPLOYEES m
ON e.MANAGER_ID = m.EMPLOYEE_ID 
WHERE m.FIRST_NAME||m.LAST_NAME = 'John'||'Russell';


--59) Luis와 같은해에 입사한 직원들의 이름과 이메일을 조회
SELECT e.first_name,e.email,TO_CHAR(e.HIRE_DATE,'yyyy') 
FROM EMPLOYEES e JOIN EMPLOYEES m  
ON TO_CHAR(e.HIRE_DATE,'YYYY') = TO_CHAR(m.HIRE_DATE,'YYYY')
WHERE m.FIRST_NAME = 'Luis';



--60) Daivd Austin과 같은 부서 사람들의 이름, 연락처를 조회

SELECT m.FIRST_NAME ,m.PHONE_NUMBER,m.DEPARTMENT_ID 
FROM EMPLOYEES m JOIN EMPLOYEES e 
ON m.DEPARTMENT_ID = e.DEPARTMENT_ID 
WHERE e.FIRST_NAME = 'David' AND e.LAST_NAME = 'Austin';







